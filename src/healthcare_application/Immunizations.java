
package healthcare_application;

import static com.mysql.cj.util.StringUtils.isNullOrEmpty;
import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.List;
import healthcare_application.DBUtils.Immunizations_DBOperations;

public class Immunizations extends javax.swing.JFrame {

    private int patientID;
    private int RecordID;
    
    
    public Immunizations() {
        initComponents();
        
    }
    
    public Immunizations(int patientID) {
        setPatientID(patientID);
        initComponents();
        initializeTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_delivery = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_Comments = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_HCPId = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabl_Immunizations = new javax.swing.JTable();
        date_Immu_Date = new com.toedter.calendar.JDateChooser();
        date_expiration = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        txt_Vaccine = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jRadioButtonMenuItem5 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem6 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem7 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem8 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem9 = new javax.swing.JRadioButtonMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menu_Add = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem4 = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(840, 748));
        setSize(new java.awt.Dimension(840, 748));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Immunizations");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Immunization Date: ");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Experation Date: ");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Delivery: ");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Comments: ");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("HCP ID: ");

        tabl_Immunizations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Immunization ID", "Vaccine"
            }
        ));
        jScrollPane1.setViewportView(tabl_Immunizations);
        if (tabl_Immunizations.getColumnModel().getColumnCount() > 0) {
            tabl_Immunizations.getColumnModel().getColumn(1).setHeaderValue("Vaccine");
        }

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Vaccine");

        jMenuBar1.setPreferredSize(new java.awt.Dimension(70, 40));

        jMenu1.setText("Navigation");

        jRadioButtonMenuItem5.setSelected(true);
        jRadioButtonMenuItem5.setText("Patient Selection");
        jMenu1.add(jRadioButtonMenuItem5);

        jRadioButtonMenuItem6.setSelected(true);
        jRadioButtonMenuItem6.setText("Patient Demographics");
        jMenu1.add(jRadioButtonMenuItem6);

        jRadioButtonMenuItem7.setSelected(true);
        jRadioButtonMenuItem7.setText("General Medical History");
        jMenu1.add(jRadioButtonMenuItem7);

        jRadioButtonMenuItem8.setSelected(true);
        jRadioButtonMenuItem8.setText("Activity Tolerance");
        jMenu1.add(jRadioButtonMenuItem8);

        jRadioButtonMenuItem9.setSelected(true);
        jRadioButtonMenuItem9.setText("Immunizations");
        jMenu1.add(jRadioButtonMenuItem9);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Actions");

        menu_Add.setSelected(true);
        menu_Add.setText("Add Record");
        menu_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_AddActionPerformed(evt);
            }
        });
        jMenu2.add(menu_Add);

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("Edit Record");
        jMenu2.add(jRadioButtonMenuItem2);

        jRadioButtonMenuItem3.setSelected(true);
        jRadioButtonMenuItem3.setText("Save Record");
        jMenu2.add(jRadioButtonMenuItem3);

        jRadioButtonMenuItem4.setSelected(true);
        jRadioButtonMenuItem4.setText("Delete Record");
        jMenu2.add(jRadioButtonMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(date_Immu_Date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(date_expiration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txt_delivery, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txt_Comments, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(0, 0, Short.MAX_VALUE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_Vaccine, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_HCPId, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(407, 407, 407)
                        .addComponent(jLabel1)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(txt_Vaccine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(date_Immu_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(date_expiration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txt_delivery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txt_Comments, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txt_HCPId, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menu_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_AddActionPerformed
        Immunizations_DBOperations.addImmunizationHistory(this, getPatientID());
    }//GEN-LAST:event_menu_AddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Immunizations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Immunizations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Immunizations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Immunizations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Immunizations().setVisible(true);
            }
        });
    }
    
    public int getPatientID() {
        return this.patientID;
    }
    
    public void setPatientID(int patientID) {
        this.patientID = patientID;
    }
    
    public int getRecordID() {
        return this.RecordID;
    }
    
    public void setRecordID(int recordID) {
        this.RecordID = recordID;
    }
    
    // Getter for datechooser_DOB
    public com.toedter.calendar.JDateChooser getImmu_Date() {
        return this.date_Immu_Date;
    }
    
    // Setter for datechooser_DOB with null check
    public void setImmu_Date(com.toedter.calendar.JDateChooser date_Immu_Date) {
        this.date_Immu_Date = (date_Immu_Date != null) ? date_Immu_Date : null;
    }
    
    // Getter for datechooser_DOB
    public com.toedter.calendar.JDateChooser getImmu_Exp_Date() {
        return this.date_expiration;
    }
    
    // Setter for datechooser_DOB with null check
    public void setExpImmu_Date(com.toedter.calendar.JDateChooser date_Immu_Date) {
        this.date_expiration = (date_expiration != null) ? date_expiration : null;
    }
    
    // Getters and setters for JTextArea fields
    public String getDelivery() {
        return txt_delivery.getText();
    }

    public void setDelivery(String value) {
        txt_delivery.setText(isNullOrEmpty(value) ? null : value);
    }
    
    // Getters and setters for JTextArea fields
    public String getComments() {
        return txt_Comments.getText();
    }

    public void setComments(String value) {
        txt_Comments.setText(isNullOrEmpty(value) ? null : value);
    }
    
    // Getters and setters for JTextArea fields
    public String getHCPId() {
        return txt_HCPId.getText();
    }

    public void setHCPId(String value) {
        txt_HCPId.setText(isNullOrEmpty(value) ? null : value);
    }
    
    // Getters and setters for JTextArea fields
    public String getVaccine() {
        return txt_Vaccine.getText();
    }

    public void setVaccine(String value) {
        txt_Vaccine.setText(isNullOrEmpty(value) ? null : value);
    }
    
    
    private void initializeTable() {
        // Call the PatientDBUtils method to get the ResultSet
        ResultSet rs = Immunizations_DBOperations.PatientDBUtils(patientID);

        if (rs != null) {
            // Table model to display data in JTable
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Date");
            model.addColumn("Expiration Date");
            model.addColumn("Delivery");
            model.addColumn("Comments");
            model.addColumn("HCPId");
            model.addColumn("Immunization ID");
            model.addColumn("Vaccine");
            model.addColumn("Patient ID");

            // Store data for comboboxes in a list or map for later use
            List<Object[]> rowDataList = new ArrayList<>();

            // Populate table with result set data
            try {
                while (rs.next()) {
                    Object[] row = new Object[7];
                    row[0] = rs.getTimestamp("Date");
                    row[1] = rs.getTimestamp("Expiration Date");             
                    row[2] = rs.getString("Delivery");
                    row[3] = rs.getString("Comments"); 
                    row[4] = rs.getString("HCPId");

                    row[5] = rs.getInt("ImmunizationsID");
                    row[6] = rs.getString("Vaccine");
                    row[7] = rs.getString("PatientID");
                    // Add row to model
                    model.addRow(row);

                    // Store data in the list for future reference
                    rowDataList.add(row);
                }

                // Set the model to the existing JTable
                tabl_Immunizations.setModel(model);

                // Hide the columns (indexes 1, 2, and 3)
                tabl_Immunizations.getColumnModel().getColumn(0).setMaxWidth(0);
                tabl_Immunizations.getColumnModel().getColumn(0).setMinWidth(0);
                tabl_Immunizations.getColumnModel().getColumn(0).setPreferredWidth(0);

                tabl_Immunizations.getColumnModel().getColumn(1).setMaxWidth(0);
                tabl_Immunizations.getColumnModel().getColumn(1).setMinWidth(0);
                tabl_Immunizations.getColumnModel().getColumn(1).setPreferredWidth(0);

                tabl_Immunizations.getColumnModel().getColumn(2).setMaxWidth(0);
                tabl_Immunizations.getColumnModel().getColumn(2).setMinWidth(0);
                tabl_Immunizations.getColumnModel().getColumn(2).setPreferredWidth(0);

                tabl_Immunizations.getColumnModel().getColumn(3).setMaxWidth(0);
                tabl_Immunizations.getColumnModel().getColumn(3).setMinWidth(0);
                tabl_Immunizations.getColumnModel().getColumn(3).setPreferredWidth(0);
                
                
                tabl_Immunizations.getColumnModel().getColumn(4).setMaxWidth(0);
                tabl_Immunizations.getColumnModel().getColumn(4).setMinWidth(0);
                tabl_Immunizations.getColumnModel().getColumn(4).setPreferredWidth(0);
                
                tabl_Immunizations.getColumnModel().getColumn(7).setMaxWidth(0);
                tabl_Immunizations.getColumnModel().getColumn(7).setMinWidth(0);
                tabl_Immunizations.getColumnModel().getColumn(7).setPreferredWidth(0);
                

                // Add ListSelectionListener to the JTable to capture selection changes
                tabl_Immunizations.getSelectionModel().addListSelectionListener(e -> {
                    if (!e.getValueIsAdjusting()) {  // Check if the selection has changed
                        int selectedRow = tabl_Immunizations.getSelectedRow();
                        if (selectedRow != -1) {
                            // Get the values of the selected row from the stored list
                            Object[] selectedRowData = rowDataList.get(selectedRow);
                            Timestamp timestamp = (Timestamp) selectedRowData[0];
                            java.util.Date date = new java.util.Date(timestamp.getTime());
                            
                            Timestamp expireTimestamp = (Timestamp) selectedRowData[1];
                            java.util.Date expireDate = new java.util.Date(expireTimestamp.getTime());
                            
                            
                            String delivery = (String) selectedRowData[2];
                            String comments = (String) selectedRowData[3];
                            String hcpid = (String) selectedRowData[4];
                            RecordID = (int) selectedRowData[5];  
                            
                            String vaccine = (String) selectedRowData[6];
                            
                            patientID = (int) selectedRowData[7];
                            
                            setRecordID(RecordID);
                            
                            setPatientID(patientID);
                            
                            date_Immu_Date.setDate(date);
                            date_expiration.setDate(expireDate); 
                            
                            txt_Vaccine.setText(vaccine);
                            txt_delivery.setText(delivery);
                            txt_Comments.setText(comments);
                            txt_HCPId.setText(hcpid);
                            

                            
                        }
                    }
                });

            } catch (SQLException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(this, "Error processing data: " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Error retrieving data from database.");
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser date_Immu_Date;
    private com.toedter.calendar.JDateChooser date_expiration;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem4;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem5;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem6;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem7;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem8;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButtonMenuItem menu_Add;
    private javax.swing.JTable tabl_Immunizations;
    private javax.swing.JTextField txt_Comments;
    private javax.swing.JTextField txt_HCPId;
    private javax.swing.JTextField txt_Vaccine;
    private javax.swing.JTextField txt_delivery;
    // End of variables declaration//GEN-END:variables
}
